<?php

namespace {{ namespace }}\Form{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class {{ form_class }} extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
        {%- for field in fields %}

        
         {%- if 'date' in field %}

            ->add('{{ field }}','datetime',array('label'=>"Label de {{ field }}",'required'=>true,'widget' => 'single_text','format' => 'dd/MM/yyyy HH:mm', 'attr' => array('class' => 'datetimepicker')))
                    
         {%- elseif 'time' in field %}

            ->add('{{ field }}','datetime',array('label'=>"Label de {{ field }}",'required'=>true,'widget' => 'single_text','format' => 'HH:mm', 'attr' => array('class' => 'timepicker')))
         
        {%- elseif 'cke' in field %}

            ->add('{{ field }}','ckeditor',array('label'=>'Label de {{ field }}','required'=>true,'attr' => array('class' => 'ckeditor','style'=>'min-width:600px;min-height:100px;')))
                    
         {%- elseif 'col' in field %}

            ->add('{{ field }}','text',array('label'=>"Label de {{ field }}",'attr' => array('type'=>'color','class' => 'optional spectrum'),'required'=>false))
                    
         {%- else %}

            ->add('{{ field }}')

         {%- endif %}
            

        {%- endfor %}

        ;
        
         
        /*Voici quelques exemples de personnalisations de champs :
         =========================================================

         http://symfony.com/fr/doc/2.3/book/forms.html#book-forms-type-reference
          
         // choice         ->add('type','choice',array('label'=>"Choix sur Menu déroulant ",'choices' =>array(0=>'value0',1=>'value1'),'empty_value' => 'Veuillez choisir...','empty_data'  => null ))
         // checkbox       ->add('state','checkbox',array('label'=>"État de...",'required'=>false))
       
         // colorpicker    ->add('fieldname','text',array('label'=>'Label de FIELD_NAME','attr' => array('type'=>'color','class' => 'optional spectrum'),'required'=>false))
         // textarea       ->add('fieldname','textarea',array('label'=>'Label de FIELD_NAME','required'=>true,'attr' => array('style'=>'min-width:600px;min-height:100px;')))
         // ckeditor(full) ->add('fieldname','ckeditor',array('label'=>'Label de FIELD_NAME','required'=>true,'attr' => array('class' => 'ckeditor')))
         // ckeditor(light)->add('fieldname','ckeditor',array('label'=>'Label de FIELD_NAME','required'=>true,'attr' => array('class' => 'ckeditor','config_name'=>'light')))
         // datetimepicker ->add('fieldname','datetime',array('label'=>'Label de FIELD_NAME','required'=>true,'widget' => 'single_text','format' => 'dd/MM/yyyy HH:mm', 'attr' => array('class' => 'datetimepicker')))
         // datepicker     ->add('fieldname','date',array('label'=>'Label de FIELD_NAME','required'=>true,'widget' => 'single_text','format' => 'dd/MM/yyyy', 'attr' => array('class' => 'datepicker')))
         // timepicker     ->add('fieldname','time',array('label'=>'Label de FIELD_NAME','required'=>true,'widget' => 'single_text','format' => 'HH:mm', 'attr' => array('class' => 'timepicker')))

         */

    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}'
        ));
    }

    public function getName()
    {
        return '{{ form_type_name }}';
    }
}
